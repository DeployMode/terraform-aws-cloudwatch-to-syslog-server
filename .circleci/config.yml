version: 2

terraform: &terraform
  docker:
    - image: hashicorp/terraform:0.10.4
  working_directory: /tmp/workspace/terraform

nodejs: &nodejs
  docker:
    - image: circleci/node:latest
  working_directory: /tmp/workspace/terraform

jobs:
  validate:
    <<: *terraform
    steps:
      - checkout
      - run:
          name: terraform init
          command: terraform init -input=false
      - run:
          name: Validate Terraform configurations
          command: find . -type f -name "*.tf" -exec dirname {} \;|sort -u | while read m; do (terraform validate -check-variables=false "$m" && echo "âˆš $m") || exit 1 ; done
      - run:
          name: Check if Terraform configurations are properly formatted
          command: if [[ -n "$(terraform fmt -write=false)" ]]; then echo "Some terraform files need be formatted, run 'terraform fmt' to fix"; exit 1; fi
      - run:
          name: Install tflint
          command: curl -L -o /tmp/tflint.zip https://github.com/wata727/tflint/releases/download/v0.4.2/tflint_linux_amd64.zip && unzip /tmp/tflint.zip -d /usr/local/bin
      - run:
          name: Check Terraform configurations with tflint
          command: tflint
      - run:
          name: "Enforce Go Formatted Code"
          command: "! go fmt ./... 2>&1 | read"

  build_nodejs:
    <<: *nodejs
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: make build
      - persist_to_workspace:
          root: .
          paths: .

  build_go:
    docker:
      - image: golang:1.12.0-stretch
    working_directory: /go/src/github.com/aiden/cloudwatch_to_syslog_server
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - dep-{{ checksum "test/Gopkg.lock" }}
      - run: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - run: cd test && dep ensure
      - save_cache:
          key: dep-{{ checksum "test/Gopkg.lock" }}
          paths:
            - ./test/vendor
      - persist_to_workspace:
          root: .
          paths: .

  e2e_test:
    docker:
      - image: golang:1.12.0-stretch
    working_directory: /go/src/github.com/aiden/cloudwatch_to_syslog_server
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Download terraform
          command: |
            set -eou pipefail
            platform=linux_amd64
            version=0.11.10
            apt-get update
            apt-get install -yq unzip
            curl -L "https://releases.hashicorp.com/terraform/${version}/terraform_${version}_${platform}.zip" > terraform.zip
            unzip terraform.zip
            rm terraform.zip
            mv terraform /usr/local/bin
      - run: cd test && go test

workflows:
  version: 2
  all:
    jobs:
      - validate
      - build_nodejs
      - build_go:
          requires:
            - build_nodejs
      - e2e_test:
          requires:
            - build_go
          filters:
            branches:
              only: master
